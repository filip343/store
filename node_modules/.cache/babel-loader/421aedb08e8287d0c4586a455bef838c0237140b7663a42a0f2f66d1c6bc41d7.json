{"ast":null,"code":"import { auth } from \"./firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, signInWithRedirect, GoogleAuthProvider, getRedirectResult } from \"firebase/auth\";\nconst reloadSigning = localStorage.getItem('reloadSignIn');\nfunction DetectDevice() {\n  let isMobile = window.matchMedia;\n  if (isMobile) {\n    let match_mobile = isMobile(\"(pointer:coarse)\");\n    return match_mobile.matches;\n  }\n  localStorage.setItem(\"isMobile\", isMobile);\n  return false;\n}\n_c = DetectDevice;\nexport const doCreateUserWithEmailAndPassword = async (email, password) => {\n  createUserWithEmailAndPassword(auth, email, password).then(user => {\n    window.location.pathname = '';\n    reloadSigning(true);\n  }).catch(err => {\n    console.log(err.code);\n  }); //TODO:make error handling\n};\n\nexport const doSignInWithEmailAndPassword = async (email, password) => {\n  signInWithEmailAndPassword(auth, email, password).then(() => {\n    window.location.pathname = '';\n  });\n};\nexport const doSignInWithGoogle = async () => {\n  const provider = new GoogleAuthProvider();\n  if (!DetectDevice()) {\n    signInWithPopup(auth, provider).then(result => {\n      const credentials = GoogleAuthProvider.credentialFromResult(result);\n      console.log(credentials);\n      const token = credentials === null || credentials === void 0 ? void 0 : credentials.accessToken;\n      console.log(token);\n    }).catch(error => {\n      var _error$customData;\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = (_error$customData = error.customData) === null || _error$customData === void 0 ? void 0 : _error$customData.email;\n      const credentials = GoogleAuthProvider.credentialFromError(error);\n    });\n  } else {\n    signInWithRedirect(auth, provider);\n    getRedirectResult(auth).then(result => {\n      if (result) {\n        const credentials = GoogleAuthProvider.credentialFromResult(result);\n        console.log(credentials);\n        const token = credentials === null || credentials === void 0 ? void 0 : credentials.accessToken;\n        const user = result.user;\n      }\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.customData.email;\n      const credentials = GoogleAuthProvider.credentialFromError(error);\n    });\n  }\n};\nexport const doSignOut = () => {\n  return auth.signOut();\n};\nvar _c;\n$RefreshReg$(_c, \"DetectDevice\");","map":{"version":3,"names":["auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","signInWithRedirect","GoogleAuthProvider","getRedirectResult","reloadSigning","localStorage","getItem","DetectDevice","isMobile","window","matchMedia","match_mobile","matches","setItem","_c","doCreateUserWithEmailAndPassword","email","password","then","user","location","pathname","catch","err","console","log","code","doSignInWithEmailAndPassword","doSignInWithGoogle","provider","result","credentials","credentialFromResult","token","accessToken","error","_error$customData","errorCode","errorMessage","message","customData","credentialFromError","doSignOut","signOut","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/sklep/code/site_/src/firebase/auth.js"],"sourcesContent":["import { auth } from \"./firebase\";\r\nimport { createUserWithEmailAndPassword,signInWithEmailAndPassword,signInWithPopup,signInWithRedirect,GoogleAuthProvider, getRedirectResult } from \"firebase/auth\";\r\n\r\nconst reloadSigning =  localStorage.getItem('reloadSignIn');\r\nfunction DetectDevice() {\r\n  let isMobile = window.matchMedia;\r\n  if (isMobile) {\r\n    let match_mobile = isMobile(\"(pointer:coarse)\");\r\n    return match_mobile.matches;\r\n  }\r\n  localStorage.setItem(\"isMobile\",isMobile);\r\n  return false;\r\n}\r\n\r\nexport const doCreateUserWithEmailAndPassword=async(email,password)=>{\r\n  \r\n  createUserWithEmailAndPassword(auth,email,password)\r\n  .then(user=>{\r\n    window.location.pathname = '';   \r\n    reloadSigning(true);\r\n  })\r\n  .catch(err=>{console.log(err.code)});//TODO:make error handling\r\n}\r\nexport const doSignInWithEmailAndPassword=async(email,password)=>{\r\n  signInWithEmailAndPassword(auth,email,password)\r\n  .then(()=>{\r\n    window.location.pathname = '';   \r\n  });\r\n}\r\n\r\nexport const doSignInWithGoogle = async()=>{\r\n  const provider = new GoogleAuthProvider();\r\n  if(!DetectDevice()){\r\n    signInWithPopup(auth,provider)\r\n    .then(result=>{\r\n      const credentials = GoogleAuthProvider.credentialFromResult(result);\r\n      console.log(credentials);\r\n      const token = credentials?.accessToken;\r\n      console.log(token);\r\n    }).catch(error=>{\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      const email = error.customData?.email;\r\n      const credentials = GoogleAuthProvider.credentialFromError(error)\r\n    })\r\n  }else{\r\n    signInWithRedirect(auth,provider);\r\n    getRedirectResult(auth)\r\n    .then(result=>{\r\n      if(result){\r\n        const credentials = GoogleAuthProvider.credentialFromResult(result);\r\n        console.log(credentials);\r\n        const token = credentials?.accessToken;\r\n        const user = result.user;\r\n      }\r\n    }).catch(error=>{\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      const email = error.customData.email;\r\n      const credentials = GoogleAuthProvider.credentialFromError(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const doSignOut=()=>{\r\n  return auth.signOut();\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}