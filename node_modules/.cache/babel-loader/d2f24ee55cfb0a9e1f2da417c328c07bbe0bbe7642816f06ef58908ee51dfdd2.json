{"ast":null,"code":"import { auth } from \"./firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, signInWithRedirect, GoogleAuthProvider, getRedirectResult } from \"firebase/auth\";\nconst addUser = token => {\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify({\n      token: token,\n      cart: []\n    }),\n    headers: {\n      'Access-Control-Allow-Origin': \"http://localhost:3000\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log('added');\n  fetch('http://localhost:8080/user', options).then(res => {\n    return res.json();\n  }).then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err.json());\n  });\n};\nconst getUserData = token => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      'Access-Control-Allow-Origin': \"http://localhost:3000\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  fetch('http://localhost:8080/user', options).then(res => {\n    return res.json();\n  }).then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err.json());\n  });\n};\nexport const doCreateUserWithEmailAndPassword = async (email, password) => {\n  createUserWithEmailAndPassword(auth, email, password).then(user => {\n    addUser(user.user.accessToken);\n  }).catch(err => {\n    console.log(err.code);\n  }); //TODO:make error handling\n};\n\nexport const doSignInWithEmailAndPassword = async (email, password) => {\n  signInWithEmailAndPassword(auth, email, password).then(() => {});\n};\nexport const doSignInWithGoogle = async () => {\n  const provider = new GoogleAuthProvider();\n  if (!localStorage.getItem('isMobile')) {\n    signInWithPopup(auth, provider).then(result => {\n      const credentials = GoogleAuthProvider.credentialFromResult(result);\n      console.log(credentials);\n      const token = credentials === null || credentials === void 0 ? void 0 : credentials.accessToken;\n      console.log(token);\n    }).catch(error => {\n      var _error$customData;\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = (_error$customData = error.customData) === null || _error$customData === void 0 ? void 0 : _error$customData.email;\n      const credentials = GoogleAuthProvider.credentialFromError(error);\n    });\n  } else {\n    signInWithRedirect(auth, provider);\n    getRedirectResult(auth).then(result => {\n      if (result) {\n        const credentials = GoogleAuthProvider.credentialFromResult(result);\n        console.log(credentials);\n        const token = credentials === null || credentials === void 0 ? void 0 : credentials.accessToken;\n        const user = result.user;\n      }\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.customData.email;\n      const credentials = GoogleAuthProvider.credentialFromError(error);\n    });\n  }\n};\nexport const doSignOut = () => {\n  return auth.signOut();\n};","map":{"version":3,"names":["auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","signInWithRedirect","GoogleAuthProvider","getRedirectResult","addUser","token","options","method","body","JSON","stringify","cart","headers","console","log","fetch","then","res","json","catch","err","getUserData","doCreateUserWithEmailAndPassword","email","password","user","accessToken","code","doSignInWithEmailAndPassword","doSignInWithGoogle","provider","localStorage","getItem","result","credentials","credentialFromResult","error","_error$customData","errorCode","errorMessage","message","customData","credentialFromError","doSignOut","signOut"],"sources":["C:/Users/PC/Desktop/sklep/code/site_/src/firebase/auth.js"],"sourcesContent":["import { auth } from \"./firebase\";\r\nimport { createUserWithEmailAndPassword,signInWithEmailAndPassword,signInWithPopup,signInWithRedirect,GoogleAuthProvider, getRedirectResult } from \"firebase/auth\";\r\n\r\n\r\n\r\nconst addUser = (token)=>{\r\n  const options = {    method: \"POST\", \r\n  body:JSON.stringify({\r\n    token:token,\r\n    cart:[]\r\n  }),\r\n  headers: {\r\n    'Access-Control-Allow-Origin':\"http://localhost:3000\",\r\n    \"Content-Type\": \"application/json\"\r\n  }};\r\n  console.log('added')\r\n  fetch('http://localhost:8080/user',options).then((res)=>{\r\n    return res.json();\r\n\r\n  }).then(res=>{\r\n    console.log(res);\r\n    \r\n  }).catch((err)=>{console.log(err.json());});\r\n\r\n}\r\nconst getUserData = (token)=>{\r\n  const options = {    method: \"GET\", \r\n  headers: {\r\n    'Access-Control-Allow-Origin':\"http://localhost:3000\",\r\n    \"Content-Type\": \"application/json\"\r\n  }};\r\n\r\n  fetch('http://localhost:8080/user',options).then((res)=>{\r\n    return res.json();\r\n\r\n  }).then(res=>{\r\n    console.log(res);\r\n    \r\n  }).catch((err)=>{console.log(err.json());});\r\n\r\n}\r\n\r\nexport const doCreateUserWithEmailAndPassword=async(email,password)=>{\r\n  \r\n  createUserWithEmailAndPassword(auth,email,password)\r\n  .then(user=>{\r\n\r\n    addUser(user.user.accessToken);\r\n  })\r\n  .catch(err=>{console.log(err.code)});//TODO:make error handling\r\n}\r\nexport const doSignInWithEmailAndPassword=async(email,password)=>{\r\n  signInWithEmailAndPassword(auth,email,password)\r\n  .then(()=>{\r\n  });\r\n}\r\n\r\nexport const doSignInWithGoogle = async()=>{\r\n  const provider = new GoogleAuthProvider();\r\n  if(!localStorage.getItem('isMobile')){\r\n    signInWithPopup(auth,provider)\r\n    .then(result=>{\r\n      const credentials = GoogleAuthProvider.credentialFromResult(result);\r\n      console.log(credentials);\r\n      const token = credentials?.accessToken;\r\n      console.log(token);\r\n    }).catch(error=>{\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      const email = error.customData?.email;\r\n      const credentials = GoogleAuthProvider.credentialFromError(error)\r\n    })\r\n  }else{\r\n    signInWithRedirect(auth,provider);\r\n    getRedirectResult(auth)\r\n    .then(result=>{\r\n      if(result){\r\n        const credentials = GoogleAuthProvider.credentialFromResult(result);\r\n        console.log(credentials);\r\n        const token = credentials?.accessToken;\r\n        const user = result.user;\r\n      }\r\n    }).catch(error=>{\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      const email = error.customData.email;\r\n      const credentials = GoogleAuthProvider.credentialFromError(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const doSignOut=()=>{\r\n  return auth.signOut();\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}